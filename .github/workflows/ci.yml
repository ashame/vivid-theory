name: CI
on:
  push:
    branches:
      - main
      - develop
  pull_request:

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
  DB_HOST: ${{secrets.DB_HOST}}
  DB_PORT: ${{secrets.DB_PORT}}
  DB_USER: ${{secrets.DB_USER}}
  DB_PASS: ${{secrets.DB_PASS}}
  DB_NAME: ${{secrets.DB_NAME}}
  DB_TYPE: ${{secrets.DB_TYPE}}

jobs:
  main:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      actions: 'write'
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout [main]
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v3 
        with: 
          node-version: '16'
      - run: npm ci
      - run: npx nx-cloud start-ci-run    
      - run: npx nx affected --target=build --parallel --max-parallel=3
      - run: npx nx affected --target=test --parallel --max-parallel=2
      - run: npx nx-cloud stop-all-agents
  pr:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      actions: 'write'
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v3
        with: 
          node-version: '16'
      - run: npm ci
      - run: npx nx-cloud start-ci-run
      - run: npx nx affected --target=build --parallel --max-parallel=3
      - run: npx nx affected --target=test --parallel --max-parallel=2
      - run: npx nx-cloud stop-all-agents
  agents:
    runs-on: ubuntu-latest
    name: Agent 1
    timeout-minutes: 60
    strategy:
      matrix:
        agent: [ 1, 2, 3 ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: 
          node-version: '16'
      - run: npm ci
      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent  